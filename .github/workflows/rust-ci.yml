# Inspired by https://github.com/succinctlabs/plonky2-ecdsa/blob/main/.github/workflows/continuous-integration.yml

name: Rust CI

on:
  push:
    branches: [main]
  pull_request:
    branches:
      - "**"

jobs:  
  test:
    name: Test Examples
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        id: rustc-toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: rust-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: rustc-test-${{ steps.rustc-toolchain.outputs.rustc_hash }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - name: Run all examples
        shell: bash
        env:
          RUSTFLAGS: -Ctarget-cpu=native
        run: |
          # List all files in the `examples` folder with `.rs` extension and strip the file extension.
          for example in $(ls examples/*.rs | xargs -n 1 basename | sed 's/\.rs$//'); do
            echo "Running example: $example"
            cargo run --release --example "$example" -- -vv
          done

  lints:
    name: Formatting and Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        id: rustc-toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: rust-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: rustc-lints-${{ steps.rustc-toolchain.outputs.rustc_hash }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
        env:
          CARGO_INCREMENTAL: 1

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets -- -D warnings -A incomplete-features
        env:
          # Seems necessary until https://github.com/rust-lang/rust/pull/115819 is merged.
          CARGO_INCREMENTAL: 0